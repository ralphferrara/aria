//||------------------------------------------------------------------------------------------------||
//|| Queue Package: Initialization
//|| init.go
//||------------------------------------------------------------------------------------------------||

package queue

//||------------------------------------------------------------------------------------------------||
//|| Import
//||------------------------------------------------------------------------------------------------||

import (
	"fmt"

	"github.com/ralphferrara/aria/config"
)

//||------------------------------------------------------------------------------------------------||
//|| Init (build all queues from main config)
//||------------------------------------------------------------------------------------------------||

func Init(cfg *config.Config) (map[string]*RabbitMQWrapper, error) {

	//||------------------------------------------------------------------------------------------------||
	//|| Output Map
	//||------------------------------------------------------------------------------------------------||

	queues := make(map[string]*RabbitMQWrapper)

	//||------------------------------------------------------------------------------------------------||
	//|| Loop Configured Queues
	//||------------------------------------------------------------------------------------------------||

	for name, qCfg := range cfg.Queue {
		switch qCfg.Backend {

		//||------------------------------------------------------------------------------------------------||
		//|| RabbitMQ
		//||------------------------------------------------------------------------------------------------||
		case "rabbitmq", "RABBITMQ":
			conn, ch, err := connectRabbit(qCfg)
			if err != nil {
				return nil, fmt.Errorf("queue '%s' rabbitmq connect failed: %w", name, err)
			}
			queues[name] = &RabbitMQWrapper{
				Name:    name,
				Conn:    conn,
				Channel: ch,
			}
			fmt.Printf("\n[RBBT] - Initializing queue: %s (backend: %s)", name, "RabbitMQ")
		//||------------------------------------------------------------------------------------------------||
		//|| Unsupported
		//||------------------------------------------------------------------------------------------------||
		default:
			return nil, fmt.Errorf("unsupported queue backend: %s", qCfg.Backend)
		}
	}

	//||------------------------------------------------------------------------------------------------||
	//|| Return Map
	//||------------------------------------------------------------------------------------------------||

	return queues, nil
}
