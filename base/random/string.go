package random

//||------------------------------------------------------------------------------------------------||
//|| Import
//||------------------------------------------------------------------------------------------------||

import (
	"crypto/rand"
	"math/big"
	"strings"

	"github.com/google/uuid"
)

//||------------------------------------------------------------------------------------------------||
//|| Generate a UUID
//||------------------------------------------------------------------------------------------------||

func UUIDString() string {
	id := uuid.New()
	return id.String()
}

//||------------------------------------------------------------------------------------------------||
//|| NumberString
//||------------------------------------------------------------------------------------------------||

func NumberString(l int) string {
	if l <= 0 {
		return ""
	}
	var sb strings.Builder
	//||------------------------------------------------------------------------------------------------||
	//|| First digit: 1–9
	//||------------------------------------------------------------------------------------------------||
	firstDigit, _ := rand.Int(rand.Reader, big.NewInt(9))
	sb.WriteByte('1' + byte(firstDigit.Int64()))
	//||------------------------------------------------------------------------------------------------||
	//|| NumberString
	//||------------------------------------------------------------------------------------------------||
	for i := 1; i < l; i++ {
		digit, _ := rand.Int(rand.Reader, big.NewInt(10))
		sb.WriteByte('0' + byte(digit.Int64()))
	}
	//||------------------------------------------------------------------------------------------------||
	//|| Return String
	//||------------------------------------------------------------------------------------------------||
	return sb.String()
}

//||------------------------------------------------------------------------------------------------||
//|| RandomString: Secure random alphanumeric string (a–z, A–Z, 0–9)
//||------------------------------------------------------------------------------------------------||

func RandomString(l int) string {
	if l <= 0 {
		return ""
	}

	const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
	const charsLen = int64(len(chars))

	var sb strings.Builder
	sb.Grow(l)

	for sb.Len() < l {
		n, err := rand.Int(rand.Reader, big.NewInt(charsLen))
		if err != nil {
			continue // Try again to fill the full length
		}
		sb.WriteByte(chars[n.Int64()])
	}

	return sb.String()
}
