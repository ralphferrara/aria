package bip39

//||------------------------------------------------------------------------------------------------||
//|| Import
//||------------------------------------------------------------------------------------------------||

import (
	"errors"
	"strings"
)

//||------------------------------------------------------------------------------------------------||
//|| ValidateBIP39: Accepts a JSON array of words and validates each against the official BIP39 list
//||------------------------------------------------------------------------------------------------||

func IsValidBIP39Word(word string) bool {
	for _, w := range DataBIP39() {
		if w == word {
			return true
		}
	}
	return false
}

//||------------------------------------------------------------------------------------------------||
//|| ValidateBIP39: Validates a BIP39WordList against the official BIP39 list
//||------------------------------------------------------------------------------------------------||

func ValidateBIP39List(wordList BIP39WordList, expectedCount int) error {

	//||------------------------------------------------------------------------------------------------||
	//|| Empty Check
	//||------------------------------------------------------------------------------------------------||

	if len(wordList) == 0 {
		return errors.New("MISSING_BIP39_LIST")
	}

	//||------------------------------------------------------------------------------------------------||
	//|| Normalize, Validate, and Build Result
	//||------------------------------------------------------------------------------------------------||

	validated := make(BIP39WordList)
	for i := 0; i < len(wordList); i++ {
		w := strings.ToLower(strings.TrimSpace(wordList[i]))
		if w == "" {
			return errors.New("INVALID_BIP39_LIST")
		}
		if !IsValidBIP39Word(w) {
			return errors.New("INVALID_BIP39_WORD")
		}
		validated[i] = w
	}

	//||------------------------------------------------------------------------------------------------||
	//|| Validate Count
	//||------------------------------------------------------------------------------------------------||

	if (len(validated) != expectedCount) || (len(validated) != len(wordList)) {
		return errors.New("BIP39_WORD_COUNT_MISMATCH")
	}

	//||------------------------------------------------------------------------------------------------||
	//|| Return Validated WordList
	//||------------------------------------------------------------------------------------------------||

	return nil
}
